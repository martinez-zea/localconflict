<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>liblo: lo_types.h File Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.1 -->
<h1>lo_types.h File Reference</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef void *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="lo__types_8h.html#bf9b53223467de596b89e1377b0f3f3d">lo_address</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">A reference to an OSC service.  <a href="#bf9b53223467de596b89e1377b0f3f3d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef void *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="lo__types_8h.html#8e780f8c09e3e4dd737fe249f11d16fc">lo_blob</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">A object to store an opaque binary data object.  <a href="#8e780f8c09e3e4dd737fe249f11d16fc"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef void *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="lo__types_8h.html#d126083c98d941f00eb72d1690b38d63">lo_message</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">A low-level object used to represent messages passed over OSC.  <a href="#d126083c98d941f00eb72d1690b38d63"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef void *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="lo__types_8h.html#96254950ad34e9cfbf8a6613fc74025b">lo_bundle</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">A low-level object used to represent bundles of messages passed over OSC.  <a href="#96254950ad34e9cfbf8a6613fc74025b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef void *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="lo__types_8h.html#66faedf5da13231d8c0166870477dce5">lo_method</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">An object representing an method on a server.  <a href="#66faedf5da13231d8c0166870477dce5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef void *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="lo__types_8h.html#59067bf50cf8abb4371da6f03c9036c9">lo_server</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">An object representing an instance of an OSC server.  <a href="#59067bf50cf8abb4371da6f03c9036c9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef void *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="lo__types_8h.html#09996ffb6bde21b8fb6106897b88feae">lo_server_thread</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">An object representing a thread containing an OSC server.  <a href="#09996ffb6bde21b8fb6106897b88feae"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef void(*)&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="lo__types_8h.html#6663024c5970f397af12afdb906ab9bd">lo_err_handler</a> (int num, const char *msg, const char *where)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">A callback function to receive notifcation of an error in a server or server thread.  <a href="#6663024c5970f397af12afdb906ab9bd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef int(*)&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="lo__types_8h.html#4551cfeeee8917dea22bf1c7e858fd2b">lo_method_handler</a> (const char *path, const char *types, <a class="el" href="unionlo__arg.html">lo_arg</a> **argv, int argc, <a class="el" href="lo__types_8h.html#d126083c98d941f00eb72d1690b38d63">lo_message</a> msg, void *user_data)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">A callback function to receive notifcation of matching message arriving in the server or server thread.  <a href="#4551cfeeee8917dea22bf1c7e858fd2b"></a><br></td></tr>
</table>
<hr><h2>Typedef Documentation</h2>
<a class="anchor" name="bf9b53223467de596b89e1377b0f3f3d"></a><!-- doxytag: member="lo_types.h::lo_address" ref="bf9b53223467de596b89e1377b0f3f3d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void* <a class="el" href="lo__types_8h.html#bf9b53223467de596b89e1377b0f3f3d">lo_address</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
A reference to an OSC service. 
<p>
Created by calls to <a class="el" href="group__liblo.html#ge5af61a02ab08871d3ea070c8f770cfe">lo_address_new()</a> or <a class="el" href="group__liblo.html#g1af2cb3c80393cba838f64dfcdc35620">lo_address_new_from_url()</a>. 
</div>
</div><p>
<a class="anchor" name="8e780f8c09e3e4dd737fe249f11d16fc"></a><!-- doxytag: member="lo_types.h::lo_blob" ref="8e780f8c09e3e4dd737fe249f11d16fc" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void* <a class="el" href="lo__types_8h.html#8e780f8c09e3e4dd737fe249f11d16fc">lo_blob</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
A object to store an opaque binary data object. 
<p>
Can be passed over OSC using the 'b' type. Created by calls to <a class="el" href="group__liblo.html#gffb2348c70cb0e1214fd50bdc7574c39">lo_blob_new()</a>. 
</div>
</div><p>
<a class="anchor" name="96254950ad34e9cfbf8a6613fc74025b"></a><!-- doxytag: member="lo_types.h::lo_bundle" ref="96254950ad34e9cfbf8a6613fc74025b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void* <a class="el" href="lo__types_8h.html#96254950ad34e9cfbf8a6613fc74025b">lo_bundle</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
A low-level object used to represent bundles of messages passed over OSC. 
<p>
Created by calls to <a class="el" href="group__liblolowlevel.html#g330a4a4e6227b185b3ec6219ff3e2859">lo_bundle_new()</a>, messages can be added with calls to <a class="el" href="group__liblolowlevel.html#g44e0e03554e91e76e5856e99fbb8afad">lo_bundle_add_message()</a>. 
</div>
</div><p>
<a class="anchor" name="6663024c5970f397af12afdb906ab9bd"></a><!-- doxytag: member="lo_types.h::lo_err_handler" ref="6663024c5970f397af12afdb906ab9bd" args="(int num, const char *msg, const char *where)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(*) <a class="el" href="lo__types_8h.html#6663024c5970f397af12afdb906ab9bd">lo_err_handler</a>(int num, const char *msg, const char *where)          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
A callback function to receive notifcation of an error in a server or server thread. 
<p>
On callback the paramters will be set to the following values:<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>num</em>&nbsp;</td><td>An error number that can be used to identify this condition. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>msg</em>&nbsp;</td><td>An error message describing the condidtion. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>where</em>&nbsp;</td><td>A string describing the place the error occured - typically either a function call or method path. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="d126083c98d941f00eb72d1690b38d63"></a><!-- doxytag: member="lo_types.h::lo_message" ref="d126083c98d941f00eb72d1690b38d63" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void* <a class="el" href="lo__types_8h.html#d126083c98d941f00eb72d1690b38d63">lo_message</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
A low-level object used to represent messages passed over OSC. 
<p>
Created by calls to <a class="el" href="group__liblolowlevel.html#g2cce2e97452e3e9d6b5d3af33bb1d153">lo_message_new()</a>, arguments can be added with calls to lo_message_add_*(). 
</div>
</div><p>
<a class="anchor" name="66faedf5da13231d8c0166870477dce5"></a><!-- doxytag: member="lo_types.h::lo_method" ref="66faedf5da13231d8c0166870477dce5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void* <a class="el" href="lo__types_8h.html#66faedf5da13231d8c0166870477dce5">lo_method</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
An object representing an method on a server. 
<p>
Returned by calls to <a class="el" href="group__liblo.html#gcff9c90a8efc400448276b2d20831010">lo_server_thread_add_method()</a> and <a class="el" href="group__liblolowlevel.html#g0c183cabaac67eb9aad3265ae1efa580">lo_server_add_method()</a>. 
</div>
</div><p>
<a class="anchor" name="4551cfeeee8917dea22bf1c7e858fd2b"></a><!-- doxytag: member="lo_types.h::lo_method_handler" ref="4551cfeeee8917dea22bf1c7e858fd2b" args="(const char *path, const char *types, lo_arg **argv, int argc, lo_message msg, void *user_data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int(*) <a class="el" href="lo__types_8h.html#4551cfeeee8917dea22bf1c7e858fd2b">lo_method_handler</a>(const char *path, const char *types, <a class="el" href="unionlo__arg.html">lo_arg</a> **argv, int argc, <a class="el" href="lo__types_8h.html#d126083c98d941f00eb72d1690b38d63">lo_message</a> msg, void *user_data)          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
A callback function to receive notifcation of matching message arriving in the server or server thread. 
<p>
On callback the paramters will be set to the following values:<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>path</em>&nbsp;</td><td>That path that the incoming message was sent to </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>types</em>&nbsp;</td><td>If you specided types in your method creation call then this will match those and the incoming types will have been coerced to match, otherwise it will be the types of the arguments of the incoming message. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>argv</em>&nbsp;</td><td>An array of <a class="el" href="unionlo__arg.html">lo_arg</a> types containing the values, e.g. if the first argument of the incoming message is of type 'f' then the vlaue will be found in argv[0]-&gt;f. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>argc</em>&nbsp;</td><td>The number of argumets received. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>msg</em>&nbsp;</td><td>A structure containing the original raw message as received. No type coercion will have occured and the data will be in OSC byte order (bigendian). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>user_data</em>&nbsp;</td><td>This contains the user_data value passed in the call to lo_server_thread_add_method. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="59067bf50cf8abb4371da6f03c9036c9"></a><!-- doxytag: member="lo_types.h::lo_server" ref="59067bf50cf8abb4371da6f03c9036c9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void* <a class="el" href="lo__types_8h.html#59067bf50cf8abb4371da6f03c9036c9">lo_server</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
An object representing an instance of an OSC server. 
<p>
Created by calls to <a class="el" href="group__liblolowlevel.html#g78cfb23346e44465695293d4393447ae">lo_server_new()</a>. If you with the library to take care of the threading as well you can just use server threads instead. 
</div>
</div><p>
<a class="anchor" name="09996ffb6bde21b8fb6106897b88feae"></a><!-- doxytag: member="lo_types.h::lo_server_thread" ref="09996ffb6bde21b8fb6106897b88feae" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void* <a class="el" href="lo__types_8h.html#09996ffb6bde21b8fb6106897b88feae">lo_server_thread</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
An object representing a thread containing an OSC server. 
<p>
Created by calls to <a class="el" href="group__liblo.html#gbe3e0c31189adfd7624de6c507b610ba">lo_server_thread_new()</a>. 
</div>
</div><p>
<hr size="1"><address style="align: right;"><small>Generated on Wed Dec 5 10:39:15 2007 for liblo by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1 </small></address>
</body>
</html>
