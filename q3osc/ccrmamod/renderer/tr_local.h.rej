***************
*** 866,871 ****
  	qboolean	projection2D;	// if qtrue, drawstretchpic doesn't need to change modes
  	byte		color2D[4];
  	qboolean	vertexes2D;		// shader needs to be finished
  	trRefEntity_t	entity2D;	// currentEntity will point at this when doing 2D rendering
  } backEndState_t;
  
--- 866,873 ----
  	qboolean	projection2D;	// if qtrue, drawstretchpic doesn't need to change modes
  	byte		color2D[4];
  	qboolean	vertexes2D;		// shader needs to be finished
+ 	qboolean	doneBloom;		// done bloom this frame
+ 	qboolean	doneSurfaces;   // done any 3d surfaces already
  	trRefEntity_t	entity2D;	// currentEntity will point at this when doing 2D rendering
  } backEndState_t;
  
***************
*** 1317,1322 ****
  
  extern	shaderCommands_t	tess;
  
  void RB_BeginSurface(shader_t *shader, int fogNum );
  void RB_EndSurface(void);
  void RB_CheckOverflow( int verts, int indexes );
--- 1319,1325 ----
  
  extern	shaderCommands_t	tess;
  
+ void RB_SetGL2D (void);
  void RB_BeginSurface(shader_t *shader, int fogNum );
  void RB_EndSurface(void);
  void RB_CheckOverflow( int verts, int indexes );
***************
*** 1669,1673 ****
  void R_DoneFreeType( void );
  void RE_RegisterFont(const char *fontName, int pointSize, fontInfo_t *font);
  
  
  #endif //TR_LOCAL_H
--- 1672,1679 ----
  void R_DoneFreeType( void );
  void RE_RegisterFont(const char *fontName, int pointSize, fontInfo_t *font);
  
+ //Bloom Stuff
+ void R_BloomInit( void );
+ void R_BloomScreen( void );
  
  #endif //TR_LOCAL_H
